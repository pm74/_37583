
#Область ПрограммныйИнтерфейс_Алгоритмы

Процедура ВыполнитьПроцедуру(ПредставлениеАлгоритма,ВходящиеПараметры=Неопределено,ОшибкаВыполнения = Ложь,СообщениеОбОшибке = "")Экспорт
	// для совместимости со старыми версиями
	ВыполнитьФункцию(ПредставлениеАлгоритма,ВходящиеПараметры,ОшибкаВыполнения,СообщениеОбОшибке);
КонецПроцедуры 

Функция ВыполнитьФункцию(ПредставлениеАлгоритма, ВходящиеПараметры=Неопределено, ОшибкаВыполнения = Ложь,СообщениеОбОшибке = "") Экспорт
	
	Если ТипЗнч(ВходящиеПараметры) = Тип("Структура") Тогда 
		Если ВходящиеПараметры.Свойство("this") Тогда
			this = ВходящиеПараметры.this;
		Иначе
			this = Новый Соответствие;
		КонецЕсли;
	Иначе
		ВходящиеПараметры = Новый Структура();
		this = Новый Соответствие;
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(ПредставлениеАлгоритма) Тогда
		АдресХранилища  = ПредставлениеАлгоритма;
	Иначе
		АдресХранилища  = _37583_АлгоритмыСервер.ПолучитьСтруктуруВыполненияНаКлиенте(ПредставлениеАлгоритма, ВходящиеПараметры);
	КонецЕсли;
	

	СвойстваАлгоритма = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Параметры = СвойстваАлгоритма.Параметры;
	
	Если Не Параметры.Отказ Тогда
		Попытка
			Выполнить Параметры.КодАлгоритма;
		Исключение
			ОшибкаВыполнения = Истина;
			СообщениеОбОшибке = "Ошибка выпонения : "+ОписаниеОшибки() + ";";
			Параметры.Вставить("СообщениеОбОшибке", СообщениеОбОшибке);
			Параметры.Вставить("Отказ", Истина);
			_37583_АлгоритмыСервер.ЗаписатьВЖурналРегистрации("37583_ALG (&НаКлиенте) " ,СообщениеОбОшибке);
			Если СвойстваАлгоритма.ВыбрасыватьИсключение Тогда
				ВызватьИсключение СообщениеОбОшибке; 
			КонецЕсли;
		КонецПопытки;
	Иначе 
		PopUp(Параметры.СообщениеОбОшибке);
	КонецЕсли;
	
	УдалитьИзВременногоХранилища(АдресХранилища);
	
	Возврат this;
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс_СообщенияДляПользователя

Процедура PopUp(ТекстСообщения ,Заголовок = Неопределено, СтатусВажное = Истина) Экспорт
    Если Не Заголовок = Неопределено Тогда
        ПоказатьОповещениеПользователя(Заголовок,,ТекстСообщения,БиблиотекаКартинок._37583_Робот,?(СтатусВажное,СтатусОповещенияПользователя.Важное,СтатусОповещенияПользователя.Информация));
    Иначе
        // чтобы не было скучно )
        мСообщений = Новый Массив;
        мСообщений.Добавить(" Есть ошибки ...");
        мСообщений.Добавить(" Ошибочка  ...");
        мСообщений.Добавить(" WTF ...");
        мСообщений.Добавить(" Не ошибается тот , кто не делает ...");
        мСообщений.Добавить(" Опять ошибка ...");
        мСообщений.Добавить(" Никогда не было и вот опять ...");
        мСообщений.Добавить(" Zzzzzzzzzz ...");
        мСообщений.Добавить(" Эммм ...");
        мСообщений.Добавить(" Что за ...");
        
        гсч = Новый ГенераторСлучайныхЧисел();
        ранд = гсч.СлучайноеЧисло(0,мСообщений.Количество()-1);
        ПоказатьОповещениеПользователя(мСообщений[ранд],,">>> " + ТекстСообщения,БиблиотекаКартинок._37583_Робот,?(СтатусВажное,СтатусОповещенияПользователя.Важное,СтатусОповещенияПользователя.Информация));
    КонецЕсли;
КонецПроцедуры

Процедура ПоказатьОповещениеСДействием(Заголовок,ТекстОповещения,ДополнительныеПараметры) Экспорт
    Если ДополнительныеПараметры.Свойство("Объект") И  ДополнительныеПараметры.Свойство("Код") Тогда
        ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьЗавершение", ЭтотОбъект, ДополнительныеПараметры);
        ПоказатьОповещениеПользователя(Заголовок,ОписаниеОповещения,ТекстОповещения,БиблиотекаКартинок._37583_Робот,СтатусОповещенияПользователя.Информация);
    КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// завершение асинхронных процедур
Процедура ВыполнитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Не ДополнительныеПараметры.Свойство("АлгоритмЗавершение") Тогда 
        Возврат;
    Иначе
        ДополнительныеПараметры.Вставить("РезультатЗавершение",Результат);
        ВыполнитьФункцию(ДополнительныеПараметры.АлгоритмЗавершение, ДополнительныеПараметры);
    КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти


