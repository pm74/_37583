
////*** Упрощенный аналог БСПшных Подключаемых команд , без привязки к объекту
//// основной вариант использования - формы отчетов и обработок
//// код процедур частично заимствован из БСП для сохранения совместимости обработчиков 
//// подключения 


Процедура ПриСозданииНаСервере(Форма)Экспорт 
	
	
	Параметры = Форма.Параметры;
	
	ЭтоФормаОбъекта = Параметры.Свойство("Ключ");
	
	Команды = _37583_АлгоритмыКэш.КэшФормы(Форма.ИмяФормы,ЭтоФормаОбъекта);
	
	ПараметрыРазмещения = Новый Структура("Источники, КоманднаяПанель, ПрефиксГрупп");
	ПараметрыРазмещения.ПрефиксГрупп = "";
	ПараметрыРазмещения.Вставить("ЭтоФормаОбъекта", ЭтоФормаОбъекта);
	ПараметрыРазмещения.Вставить("ЕстьУсловияВидимости", Ложь);
	
	ВывестиКоманды(Форма, Команды, ПараметрыРазмещения);
	
КонецПроцедуры

Функция ШаблонТаблицыКоманд()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Вид", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	// Настройки внешнего вида:
	Таблица.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Подменю", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Важность", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Картинка"); // Картинка.
	Таблица.Колонки.Добавить("СочетаниеКлавиш"); // СочетаниеКлавиш.
	Таблица.Колонки.Добавить("ОтображениеКнопки");
	// Настройки видимости и доступность:
	Таблица.Колонки.Добавить("ТипПараметра"); // ОписаниеТипов.
	Таблица.Колонки.Добавить("ВидимостьВФормах", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Назначение", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ФункциональныеОпции", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("УсловияВидимости", Новый ОписаниеТипов("Массив"));
	Таблица.Колонки.Добавить("ИзменяетВыбранныеОбъекты",Новый ОписаниеТипов("Булево")); 
	// Настройки процесса выполнения:
	Таблица.Колонки.Добавить("МножественныйВыбор",Новый ОписаниеТипов("Булево")); 
	Таблица.Колонки.Добавить("РежимЗаписи", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ТребуетсяРаботаСФайлами", Новый ОписаниеТипов("Булево"));
	// Настройки обработчика:
	Таблица.Колонки.Добавить("Менеджер", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Обработчик", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ДополнительныеПараметры", Новый ОписаниеТипов("Структура"));
	Таблица.Колонки.Добавить("ИмяФормы", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ПараметрыФормы"); // Структура или Неопределено.
	Таблица.Колонки.Добавить("ИмяПараметраФормы", Новый ОписаниеТипов("Строка"));
	// Служебные:
	Таблица.Колонки.Добавить("ПорядокВажности", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("ИмяВФорме", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ЕстьУсловияВидимости", Новый ОписаниеТипов("Булево"));
	
	Возврат Таблица;
	
КонецФункции

Функция КэшТаблицыКоманд(ИмяФормы, ЭтоФормаОбъекта) Экспорт
	
	Команды  = ШаблонТаблицыКоманд();
	
	Контекст = Новый Структура;
	Контекст.Вставить("ИмяФормы", ИмяФормы);
	
	_37583_И_СтандартныеПодсистемы.ПриОпределенииКомандПодключенныхКОбъекту(Контекст,Неопределено,Неопределено,Команды, Истина);
	
	Возврат Команды;
	
КонецФункции

// Размещает подключенные команды в форме.
//
// Параметры:
//   Форма - УправляемаяФорма - форма, в которой необходимо разместить команды.
//
Процедура ВывестиКоманды(Форма, Команды, ПараметрыРазмещения)
	
	Элементы = Форма.Элементы;
	ПрефиксГрупп = ?(ЗначениеЗаполнено(ПараметрыРазмещения.ПрефиксГрупп), ПараметрыРазмещения.ПрефиксГрупп, "");
	КоманднаяПанель = ПараметрыРазмещения.КоманднаяПанель;
	
	Если КоманднаяПанель = Неопределено Тогда
		КоманднаяПанель = Элементы.Найти(ПрефиксГрупп + "ПодключаемыеКоманды");
		Если КоманднаяПанель = Неопределено Тогда
			КоманднаяПанель = Элементы.Найти(ПрефиксГрупп + "КоманднаяПанель");
			Если КоманднаяПанель = Неопределено Тогда
				КоманднаяПанель = Элементы.Найти(ПрефиксГрупп + "ОсновнаяКоманднаяПанель");
				Если КоманднаяПанель = Неопределено И ЗначениеЗаполнено(ПрефиксГрупп) Тогда
					ТаблицаФормы = Элементы.Найти(ПрефиксГрупп);
					Если ТипЗнч(ТаблицаФормы) = Тип("ТаблицаФормы") Тогда
						КоманднаяПанель = ТаблицаФормы.КоманднаяПанель;
					КонецЕсли;
				КонецЕсли;
				Если Не ПараметрыРазмещения.ЭтоФормаОбъекта
					И КоманднаяПанель = Неопределено
					И Не ЗначениеЗаполнено(ПрефиксГрупп) Тогда
					ТаблицаФормы = Элементы.Найти("Список");
					Если ТипЗнч(ТаблицаФормы) = Тип("ТаблицаФормы")
						И ТаблицаФормы.ПоложениеКоманднойПанели <> ПоложениеКоманднойПанелиЭлементаФормы.Нет Тогда
						КоманднаяПанель = ТаблицаФормы.КоманднаяПанель;
					КонецЕсли;
				КонецЕсли;
				Если КоманднаяПанель = Неопределено Тогда
					КоманднаяПанель = Форма.КоманднаяПанель;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СведенияОВсехПодменю = Новый ТаблицаЗначений;
	СведенияОВсехПодменю.Колонки.Добавить("Подменю");
	СведенияОВсехПодменю.Колонки.Добавить("ВыведеноКоманд", Новый ОписаниеТипов("Число"));
	СведенияОВсехПодменю.Колонки.Добавить("ЕстьКомандыСУсловиямиВидимости", Новый ОписаниеТипов("Булево"));
	СведенияОВсехПодменю.Колонки.Добавить("ЕстьКомандыБезУсловийВидимости", Новый ОписаниеТипов("Булево"));
	СведенияОВсехПодменю.Колонки.Добавить("Группы", Новый ОписаниеТипов("Структура"));
	СведенияОВсехПодменю.Колонки.Добавить("ГруппаПоУмолчанию");
	СведенияОВсехПодменю.Колонки.Добавить("ПоследняяКоманда");
	СведенияОВсехПодменю.Колонки.Добавить("КомандыСУсловиямиВидимости", Новый ОписаниеТипов("Массив"));
	БыстрыйПоискСведенийОПодменю = Новый Соответствие;
	
	// Создание и начальное заполнение реквизита формы "ПараметрыПодключаемыхКоманд", если его еще нет.
	Структура = Новый Структура("ПараметрыПодключаемыхКоманд", Null);
	ЗаполнитьЗначенияСвойств(Структура, Форма);
	ПараметрыКлиента = Структура.ПараметрыПодключаемыхКоманд;
	Если ТипЗнч(ПараметрыКлиента) <> Тип("Структура") Тогда
		Если ПараметрыКлиента = Null Тогда
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПараметрыПодключаемыхКоманд", Новый ОписаниеТипов));
			Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		КонецЕсли;
		ПараметрыКлиента = Новый Структура;
		ПараметрыКлиента.Вставить("ЕстьУсловияВидимости", ПараметрыРазмещения.ЕстьУсловияВидимости);
		ПараметрыКлиента.Вставить("ПодменюСУсловиямиВидимости", Новый Массив);
		ПараметрыКлиента.Вставить("КорневыеПодменюИКоманды", Новый Массив);
		ПараметрыКлиента.Вставить("ДоступностьКоманд", Истина);
		ПараметрыКлиента.Вставить("АдресТаблицыКоманд", Неопределено);
		Форма.ПараметрыПодключаемыхКоманд = ПараметрыКлиента;
	Иначе
		ПараметрыКлиента.ЕстьУсловияВидимости = ПараметрыКлиента.ЕстьУсловияВидимости Или ПараметрыРазмещения.ЕстьУсловияВидимости;
	КонецЕсли;
	КорневыеПодменюИКоманды = ПараметрыКлиента.КорневыеПодменюИКоманды;
	
	// Вывод команд.
	Команды.Сортировать("Вид, Порядок Возр, Представление Возр");
	СчетчикКомандСАвтогенерируемымИменем = 0;
	ВидыКоманд = ВидыКоманд();
	Для Каждого ВидКоманд Из ВидыКоманд Цикл
		ПроверитьИмяВидаКоманд(ВидКоманд.Имя);
		КомандыВида = Команды.НайтиСтроки(Новый Структура("Вид", ВидКоманд.Имя));
		Количество = КомандыВида.Количество();
		Если Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяПодменюПоУмолчанию = "";
		Если Не ПустаяСтрока(ВидКоманд.ИмяПодменю) Тогда
			ИмяПодменюПоУмолчанию = ПрефиксГрупп + ВидКоманд.ИмяПодменю;
		КонецЕсли;
		
		СведенияОПодменюПоУмолчанию = БыстрыйПоискСведенийОПодменю.Получить(НРег(ИмяПодменюПоУмолчанию));
		Если СведенияОПодменюПоУмолчанию = Неопределено Тогда
			СведенияОПодменюПоУмолчанию = ЗарегистрироватьПодменю(Элементы, СведенияОВсехПодменю, ИмяПодменюПоУмолчанию, ВидКоманд, КоманднаяПанель);
			БыстрыйПоискСведенийОПодменю.Вставить(НРег(ИмяПодменюПоУмолчанию), СведенияОПодменюПоУмолчанию);
		КонецЕсли;
		
		Для Каждого Команда Из КомандыВида Цикл
			Если ПустаяСтрока(Команда.Подменю) Тогда
				СведенияОПодменюКоманды = СведенияОПодменюПоУмолчанию;
			Иначе
				ИмяПодменю = ПрефиксГрупп + Команда.Подменю;
				СведенияОПодменюКоманды = БыстрыйПоискСведенийОПодменю.Получить(НРег(ИмяПодменю));
				Если СведенияОПодменюКоманды = Неопределено Тогда
					СведенияОПодменюКоманды = ЗарегистрироватьПодменю(Элементы, СведенияОВсехПодменю, ИмяПодменю, , , СведенияОПодменюПоУмолчанию);
					БыстрыйПоискСведенийОПодменю.Вставить(НРег(ИмяПодменю), СведенияОПодменюКоманды);
				КонецЕсли;
			КонецЕсли;
			
			ГруппаФормы = Неопределено;
			Если Не ЗначениеЗаполнено(Команда.Важность)
				Или Не СведенияОПодменюКоманды.Группы.Свойство(Команда.Важность, ГруппаФормы) Тогда
				ГруппаФормы = СведенияОПодменюКоманды.ГруппаПоУмолчанию;
			КонецЕсли;
			
			Команда.ИмяВФорме = ОпределитьИмяКоманды(Форма, ГруппаФормы.Имя, Команда.Идентификатор, СчетчикКомандСАвтогенерируемымИменем);
			
			ИмяКорневогоЭлемента = ?(ВидКоманд.Имя = "КоманднаяПанель", Команда.ИмяВФорме, СведенияОПодменюКоманды.Подменю.Имя);
			Если КорневыеПодменюИКоманды.Найти(ИмяКорневогоЭлемента) = Неопределено Тогда
				КорневыеПодменюИКоманды.Добавить(ИмяКорневогоЭлемента);
			КонецЕсли;
			
			КомандаФормы = Форма.Команды.Добавить(Команда.ИмяВФорме);
			КомандаФормы.Действие = "_37583_ВыполнитьКоманду";
			КомандаФормы.Заголовок = Команда.Представление;
			КомандаФормы.Подсказка   = КомандаФормы.Заголовок;
			КомандаФормы.Отображение = ?(ЗначениеЗаполнено(Команда.ОтображениеКнопки),
				Команда.ОтображениеКнопки, ОтображениеКнопки.КартинкаИТекст);
			Если ТипЗнч(Команда.Картинка) = Тип("Картинка") Тогда
				КомандаФормы.Картинка = Команда.Картинка;
			КонецЕсли;
			Если ТипЗнч(Команда.СочетаниеКлавиш) = Тип("СочетаниеКлавиш") Тогда
				КомандаФормы.СочетаниеКлавиш = Команда.СочетаниеКлавиш;
			КонецЕсли;
			Если СведенияОПодменюКоманды.Подменю = КоманднаяПанель
				И СтрДлина(Команда.Представление) > 35
				И ЗначениеЗаполнено(КомандаФормы.Картинка) Тогда
				КомандаФормы.Отображение = ОтображениеКнопки.Картинка;
			КонецЕсли;
			
			КнопкаФормы = Элементы.Добавить(Команда.ИмяВФорме, Тип("КнопкаФормы"), ГруппаФормы);
			КнопкаФормы.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
			КнопкаФормы.ИмяКоманды = Команда.ИмяВФорме;
			
			Если Команда.ИзменяетВыбранныеОбъекты И Форма.ТолькоПросмотр Тогда
				КнопкаФормы.Доступность = Ложь;
			КонецЕсли;
			
			СведенияОПодменюКоманды.ВыведеноКоманд = СведенияОПодменюКоманды.ВыведеноКоманд + 1;
			СведенияОПодменюКоманды.ПоследняяКоманда = КомандаФормы;
			Если Команда.ЕстьУсловияВидимости Тогда
				СведенияОПодменюКоманды.ЕстьКомандыСУсловиямиВидимости = Истина;
				СведенияОКоманде = Новый Структура("ИмяВФорме, ТипПараметра, УсловияВидимости");
				ЗаполнитьЗначенияСвойств(СведенияОКоманде, Команда);
				СведенияОПодменюКоманды.КомандыСУсловиямиВидимости.Добавить(СведенияОКоманде);
			Иначе
				СведенияОПодменюКоманды.ЕстьКомандыБезУсловийВидимости = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Команда-заглушка нужна всегда.
	КомандаЗаглушка = Форма.Команды.Найти("КомандаДляВыводаВПустоеПодменю");
	Если КомандаЗаглушка = Неопределено Тогда
		КомандаЗаглушка = Форма.Команды.Добавить("КомандаДляВыводаВПустоеПодменю");
		КомандаЗаглушка.Заголовок = НСтр("ru = '(нет)'");
	КонецЕсли;
	
	// Постобработка задействованных подменю.
	Для Каждого СведенияОПодменю Из СведенияОВсехПодменю Цикл
		Если СведенияОПодменю.ВыведеноКоманд = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЭтоКоманднаяПанель = (СведенияОПодменю.Подменю = КоманднаяПанель);
		КомандаФормы = СведенияОПодменю.ПоследняяКоманда;
		Подменю = СведенияОПодменю.Подменю;
		
		Если Не ЭтоКоманднаяПанель Тогда
			Если СведенияОПодменю.ВыведеноКоманд = 1 И КомандаФормы <> Неопределено Тогда
				// Превращение подменю в кнопку когда выведена 1 команда с коротким заголовком.
				Если Не ЗначениеЗаполнено(КомандаФормы.Картинка) И Подменю.Вид = ВидГруппыФормы.Подменю Тогда
					КомандаФормы.Картинка = Подменю.Картинка;
				КонецЕсли;
				Если СтрДлина(КомандаФормы.Заголовок) <= 35 И Подменю.Отображение <> ОтображениеКнопки.Картинка Тогда
					КомандаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
				Иначе
					КомандаФормы.Отображение = ОтображениеКнопки.Картинка;
				КонецЕсли;
				Подменю.Вид = ВидГруппыФормы.ГруппаКнопок;
				КомандаФормы.Подсказка = КомандаФормы.Заголовок;
			Иначе
				// Добавление кнопок-заглушек, которые показываются когда в подменю скрыты все команды.
				ИмяКомандыЗаглушки = Подменю.Имя + "Заглушка";
				Если Элементы.Найти(ИмяКомандыЗаглушки) = Неопределено Тогда
					КнопкаФормы = Элементы.Добавить(ИмяКомандыЗаглушки, Тип("КнопкаФормы"), Подменю);
					КнопкаФормы.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
					КнопкаФормы.ИмяКоманды  = "КомандаДляВыводаВПустоеПодменю";
					КнопкаФормы.Видимость   = Ложь;
					КнопкаФормы.Доступность = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если СведенияОПодменю.ЕстьКомандыСУсловиямиВидимости Тогда
			КраткиеСведенияОПодменю = Новый Структура("Имя, КомандыСУсловиямиВидимости, ЕстьКомандыБезУсловийВидимости");
			ЗаполнитьЗначенияСвойств(КраткиеСведенияОПодменю, СведенияОПодменю);
			КраткиеСведенияОПодменю.Имя = СведенияОПодменю.Подменю.Имя;
			ПараметрыКлиента.ПодменюСУсловиямиВидимости.Добавить(КраткиеСведенияОПодменю);
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыКлиента.АдресТаблицыКоманд <> Неопределено И ЭтоАдресВременногоХранилища(ПараметрыКлиента.АдресТаблицыКоманд) Тогда
		РанееДобавленныеКоманды = ПолучитьИзВременногоХранилища(ПараметрыКлиента.АдресТаблицыКоманд);
		Если ТипЗнч(РанееДобавленныеКоманды) = Тип("ТаблицаЗначений") Тогда
			Индекс = -1;
			Для Каждого СтрокаТаблицы Из РанееДобавленныеКоманды Цикл
				Индекс = Индекс + 1;
				ЗаполнитьЗначенияСвойств(Команды.Вставить(Индекс), СтрокаТаблицы);
			КонецЦикла;
		КонецЕсли;
		УдалитьИзВременногоХранилища(ПараметрыКлиента.АдресТаблицыКоманд);
	КонецЕсли;
	ПараметрыКлиента.АдресТаблицыКоманд = ПоместитьВоВременноеХранилище(Команды, Форма.УникальныйИдентификатор);
	
КонецПроцедуры

Функция ЗарегистрироватьПодменю(Элементы, СведенияОВсехПодменю, ИмяПодменю, ШаблонНового = Неопределено, КоманднаяПанель = Неопределено, ПодменюПоУмолчанию = Неопределено)
	ВыведеноКоманд = 0;
	Группы = Новый Структура;
	Если ЗначениеЗаполнено(ИмяПодменю) Тогда
		Подменю = Элементы.Найти(ИмяПодменю);
		Если Подменю = Неопределено Тогда
			Если ШаблонНового = Неопределено Тогда
				Возврат ПодменюПоУмолчанию;
			КонецЕсли;
			Подменю = Элементы.Добавить(ИмяПодменю, Тип("ГруппаФормы"), КоманднаяПанель);
			Подменю.Вид         = ?(ЗначениеЗаполнено(ШаблонНового.ВидГруппыФормы), ШаблонНового.ВидГруппыФормы, ВидГруппыФормы.Подменю);
			Подменю.Заголовок   = ШаблонНового.Заголовок;
			Если Подменю.Вид = ВидГруппыФормы.Подменю Тогда
				Подменю.Картинка    = ШаблонНового.Картинка;
				Подменю.Отображение = ШаблонНового.Отображение;
			КонецЕсли;
		Иначе
			ГруппаПоУмолчанию = Подменю;
			ВыведеноКоманд = КоличествоКомандВГруппе(ГруппаПоУмолчанию);
			Для Каждого Группа Из Подменю.ПодчиненныеЭлементы Цикл
				Если ТипЗнч(Группа) <> Тип("ГруппаФормы") Тогда
					Продолжить;
				КонецЕсли;
				КраткоеИмя = Группа.Имя;
				Если СтрНачинаетсяС(НРег(КраткоеИмя), НРег(ИмяПодменю)) Тогда
					КраткоеИмя = Сред(КраткоеИмя, СтрДлина(ИмяПодменю) + 1);
					Если НРег(КраткоеИмя) = НРег("Обычное") Тогда
						ГруппаПоУмолчанию = Группа;
					КонецЕсли;
				КонецЕсли;
				Группы.Вставить(КраткоеИмя, Группа);
			КонецЦикла;
		КонецЕсли;
		
		Если Не Группы.Свойство("Важное") Тогда
			ГруппаВажное = Элементы.Добавить(ИмяПодменю + "Важное", Тип("ГруппаФормы"), Подменю);
			ГруппаВажное.Вид = ВидГруппыФормы.ГруппаКнопок;
			ГруппаВажное.Заголовок = Подменю.Заголовок + " (" + НСтр("ru = 'Важное'") + ")";
			Группы.Вставить("Важное", ГруппаВажное);
		КонецЕсли;
		Если Не Группы.Свойство("Обычное") Тогда
			ГруппаПоУмолчанию = Элементы.Добавить(ИмяПодменю + "Обычное", Тип("ГруппаФормы"), Подменю);
			ГруппаПоУмолчанию.Вид = ВидГруппыФормы.ГруппаКнопок;
			ГруппаПоУмолчанию.Заголовок = Подменю.Заголовок + " (" + НСтр("ru = 'Обычное'") + ")";
			Группы.Вставить("Обычное", ГруппаПоУмолчанию);
		КонецЕсли;
		Если Не Группы.Свойство("СмТакже") Тогда
			ГруппаСмТакже = Элементы.Добавить(ИмяПодменю + "СмТакже", Тип("ГруппаФормы"), Подменю);
			ГруппаСмТакже.Вид = ВидГруппыФормы.ГруппаКнопок;
			ГруппаСмТакже.Заголовок = Подменю.Заголовок + " (" + НСтр("ru = 'См. также'") + ")";
			Группы.Вставить("СмТакже", ГруппаСмТакже);
		КонецЕсли;
		
	Иначе
		Если ШаблонНового = Неопределено Тогда
			Возврат ПодменюПоУмолчанию;
		КонецЕсли;
		Подменю = КоманднаяПанель;
		ГруппаПоУмолчанию = КоманднаяПанель;
	КонецЕсли;
	
	Результат = СведенияОВсехПодменю.Добавить();
	Результат.Подменю = Подменю;
	Результат.ГруппаПоУмолчанию = ГруппаПоУмолчанию;
	Результат.Группы = Группы;
	Результат.ВыведеноКоманд = ВыведеноКоманд;
	Возврат Результат;
КонецФункции

Функция ВидыКоманд()
	Виды = Новый ТаблицаЗначений;
	Виды.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	Виды.Колонки.Добавить("ИмяПодменю", Новый ОписаниеТипов("Строка"));
	Виды.Колонки.Добавить("Заголовок", Новый ОписаниеТипов("Строка"));
	Виды.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
	Виды.Колонки.Добавить("Картинка"); // Картинка, Неопределено.
	Виды.Колонки.Добавить("Отображение"); // ОтображениеКнопки, Неопределено.
	Виды.Колонки.Добавить("ВидГруппыФормы");
	
	// Вид с пустой группой для команд, которые следует размещать в командной панели.
	Вид = Виды.Добавить();
	Вид.Имя = "КоманднаяПанель";
	Вид.ИмяПодменю = "";
	Вид.Порядок    = 90;
	
	ИнтеграцияПодсистемБСП.ПриОпределенииВидовПодключаемыхКоманд(Виды);
	
	ПодключаемыеКомандыПереопределяемый.ПриОпределенииВидовПодключаемыхКоманд(Виды);
	
	Виды.Сортировать("Порядок Возр");
	
	Возврат Виды;
КонецФункции

Процедура ПроверитьИмяВидаКоманд(ИмяВида)
	Структура = Новый Структура;
	Попытка
		Структура.Вставить(ИмяВида, Неопределено);
	Исключение
		ТекстОшибки = НСтр("ru = 'Имя вида команд ""%1"" не удовлетворяет требованиям именования переменных.'");
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ИмяВида);
	КонецПопытки;
КонецПроцедуры

Функция ОпределитьИмяКоманды(Форма, ИмяГруппы, ИдентификаторКоманды, СчетчикКомандСАвтогенерируемымИменем)
	Если ИмяСоответствуетТребованиямИменованияСвойств(ИдентификаторКоманды) Тогда
		ИмяКоманды = ИмяГруппы + "_" + ИдентификаторКоманды;
	Иначе
		СчетчикКомандСАвтогенерируемымИменем = СчетчикКомандСАвтогенерируемымИменем + 1;
		ИмяКоманды = ИмяГруппы + "_" + Формат(СчетчикКомандСАвтогенерируемымИменем, "ЧН=; ЧГ=");
	КонецЕсли;
	Пока Форма.Элементы.Найти(ИмяКоманды) <> Неопределено
		Или Форма.Команды.Найти(ИмяКоманды) <> Неопределено Цикл
		СчетчикКомандСАвтогенерируемымИменем = СчетчикКомандСАвтогенерируемымИменем + 1;
		ИмяКоманды = ИмяГруппы + "_" + Формат(СчетчикКомандСАвтогенерируемымИменем, "ЧН=; ЧГ=");
	КонецЦикла;
	Возврат ИмяКоманды;
КонецФункции

Функция ИмяСоответствуетТребованиямИменованияСвойств(Имя)
	Буквы = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯABCDEFGHIJKLMNOPQRSTUVWXYZ";
	Цифры = "1234567890";
	
	Если Имя = "" Или СтрНайти(Буквы + "_", ВРег(Лев(Имя, 1))) = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат СтрРазделить(ВРег(Имя), Буквы + Цифры + "_", Ложь).Количество() = 0;
КонецФункции

Функция КоличествоКомандВГруппе(Группа)
	Результат = 0;
	Для Каждого Элемент Из Группа.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			Результат = Результат + КоличествоКомандВГруппе(Элемент);
		ИначеЕсли ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
			Результат = Результат + 1;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

