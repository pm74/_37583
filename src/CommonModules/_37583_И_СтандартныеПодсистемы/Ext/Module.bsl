
#Область ПрограммныйИнтерфейс


#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс_БСП

Процедура ЗаполнитьКомандыРегламентныеЗадания(ПараметрыРегистрации= Неопределено) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   Алгоритмы.Наименование КАК Наименование,
    |   Алгоритмы.ИдентификаторРегламентногоЗадания КАК ИдентификаторРегламентногоЗадания
    |ИЗ
    |   Справочник._37583_ALG КАК Алгоритмы
    |ГДЕ
    |   Алгоритмы.ПометкаУдаления = ЛОЖЬ
    |   И Алгоритмы.ЭтоГруппа = ЛОЖЬ
    |   И Алгоритмы.РегламентноеЗадание = ИСТИНА";
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
        
        НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
        НоваяКоманда.Представление = НСтр("ru = '"+ВыборкаДетальныеЗаписи.Наименование+"'");
        НоваяКоманда.Идентификатор = ВыборкаДетальныеЗаписи.ИдентификаторРегламентногоЗадания;
        НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
        НоваяКоманда.ПоказыватьОповещение = Истина;
        
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды,НеБСП = Ложь) Экспорт
    
    Если Не Пользователи.РолиДоступны("_37583_ИспользованиеАлгоритмов,_37583_РедактированиеАлгоритмов") Тогда
        Возврат;
    КонецЕсли;
    
    ПолучитьТаблицуКоманд(НастройкиФормы.ИмяФормы, Команды, НеБСП);
    
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// подключение собственных команд
Функция ПолучитьТаблицуКоманд(КонтекстФормы,Команды,НеБСП)
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   _37583_ALGКомандныйИнтерфейс.Ссылка КАК Алгоритм,
    |   _37583_ALGКомандныйИнтерфейс.Представление КАК Представление,
    |   _37583_ALGКомандныйИнтерфейс.Важность КАК Важность,
    |   _37583_ALGКомандныйИнтерфейс.ОписаниеКартинки КАК ОписаниеКартинки,
    |   _37583_ALGКомандныйИнтерфейс.Назначение КАК Назначение,
    |   _37583_ALGКомандныйИнтерфейс.МножественныйВыбор КАК МножественныйВыбор,
    |   _37583_ALGКомандныйИнтерфейс.РежимЗаписи КАК РежимЗаписи,
    |   _37583_ALGКомандныйИнтерфейс.ОбъектМетаданных КАК ОбъектМетаданных,
    |   _37583_ALGКомандныйИнтерфейс.Порядок КАК Порядок,
    |   _37583_ALGКомандныйИнтерфейс.ОткрытьФорму КАК ОткрытьФорму,
    |   НЕ _37583_ALGКомандныйИнтерфейс.Ссылка.НаКлиенте КАК Серверная,
    |   _37583_ALGКомандныйИнтерфейс.ГруппаКоманд КАК ГруппаКоманд,
    |   _37583_ALGКомандныйИнтерфейс.УсловияВидимости КАК УсловияВидимости
    |ИЗ
    |   Справочник._37583_ALG.КомандныйИнтерфейс КАК _37583_ALGКомандныйИнтерфейс
    |ГДЕ
    |   _37583_ALGКомандныйИнтерфейс.КонтекстФормы = &КонтекстФормы
    |   И _37583_ALGКомандныйИнтерфейс.Активно = ИСТИНА";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	ОсновнойЗапрос = СхемаЗапроса.ПакетЗапросов[0];
	ОператорВыбрать = ОсновнойЗапрос.Операторы[0];
	
	Если НеБСП = Истина  Тогда 
		ОператорВыбрать.Отбор.Добавить("_37583_ALGКомандныйИнтерфейс.НеБСП = Истина");
	Иначе
		ОператорВыбрать.Отбор.Добавить("_37583_ALGКомандныйИнтерфейс.НеБСП = Ложь");
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
    Запрос.УстановитьПараметр("КонтекстФормы", КонтекстФормы);
    РезультатЗапроса = Запрос.Выполнить();
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		КлючМетаданных = Лев(ВыборкаДетальныеЗаписи.ОбъектМетаданных,Найти(ВыборкаДетальныеЗаписи.ОбъектМетаданных,".")-1);
		
		ТипПараметра=СтрЗаменить(ВыборкаДетальныеЗаписи.ОбъектМетаданных,КлючМетаданных,КлючМетаданных+"Ссылка");
		
		ЭтоОтчетИлиОбработка = КлючМетаданных = "Отчет" Или КлючМетаданных = "Обработка";
		
		Если НеБСП = Ложь Тогда
			Если ЭтоОтчетИлиОбработка Тогда
				// """ в  БСП не используются подключаемые команды для отчетов и обработок """ 
				Продолжить;
			КонецЕсли;
		Иначе
			Если ЭтоОтчетИлиОбработка Тогда
				ТипПараметра=СтрЗаменить(ВыборкаДетальныеЗаписи.ОбъектМетаданных,КлючМетаданных,КлючМетаданных+"Объект");
			КонецЕсли;
		КонецЕсли;
        
        Команда = Команды.Добавить();
		Команда.ТипПараметра = Новый ОписаниеТипов(ТипПараметра);
		
		Если  ПустаяСтрока(ВыборкаДетальныеЗаписи.ГруппаКоманд) Тогда 
            Команда.Вид = "Алгоритмы";
        Иначе
            Команда.Вид = _37583_ОбщегоНазначенияКлиентСервер.СклеитьСтроку(ВыборкаДетальныеЗаписи.ГруппаКоманд);
        КонецЕсли;
		
		Команда.Идентификатор ="GUID_"+Строка(ВыборкаДетальныеЗаписи.Алгоритм.УникальныйИдентификатор());
		ЗаполнитьЗначенияСвойств(Команда,ВыборкаДетальныеЗаписи);
		Команда.Представление = НСтр("ru = '"+ВыборкаДетальныеЗаписи.Представление+"' ");
		Команда.ОтображениеКнопки = ОтображениеКнопки.Картинка;
		
		// картинка на кнопке команды 
		Если НеБСП Тогда
			КартинкаПоУмолчанию = "_37583_Algo_thumb2";
		Иначе
			КартинкаПоУмолчанию = "_37583_Algo_thumb";
		КонецЕсли;
		
		Если Не ПустаяСтрока(ВыборкаДетальныеЗаписи.ОписаниеКартинки) Тогда
			Попытка
				Картинка = БиблиотекаКартинок[ВыборкаДетальныеЗаписи.ОписаниеКартинки];
			Исключение
				Картинка = БиблиотекаКартинок[КартинкаПоУмолчанию];
			КонецПопытки;
		Иначе
			Картинка = БиблиотекаКартинок[КартинкаПоУмолчанию];
		КонецЕсли;
		
		Команда.Картинка = Картинка;
		
		// условия видимости 
		Если Не ПустаяСтрока(ВыборкаДетальныеЗаписи.УсловияВидимости) И  НеБСП = Ложь  Тогда 
			ПроверитьУсловияВидимости(Команда,ВыборкаДетальныеЗаписи.Алгоритм,ВыборкаДетальныеЗаписи.УсловияВидимости);
		КонецЕсли;
        // 
		
		ДополнительныеПараметрыКоманды = Новый Структура("Алгоритм", ВыборкаДетальныеЗаписи.Алгоритм);
		
		Если НеБСП = Ложь Тогда 
			Если ВыборкаДетальныеЗаписи.Серверная Тогда 
				Команда.Обработчик = "_37583_И_СтандартныеПодсистемы.СтандартныеПодсистемыВыполнитьКоманду";
				Команда.ДополнительныеПараметры = ДополнительныеПараметрыКоманды;
			Иначе 
				Команда.ПараметрыФормы = ДополнительныеПараметрыКоманды; 
				Команда.ИмяПараметраФормы = "ВыбранныеОбъекты";
				Команда.ИмяФормы = "Обработка._37583_ОбработкаКоманды.Форма.Форма";
				Если Не ВыборкаДетальныеЗаписи.ОткрытьФорму Тогда 
					Команда.Обработчик = "ВыполнитьКоманду";
				КонецЕсли;
			КонецЕсли;
		Иначе 
			// """ в  собственной подсистеме будем использовать только клиентские процедуры """ 
			Команда.Обработчик = "_37583_ВыполнитьКомандуНаКлиенте";
			Команда.ПараметрыФормы = ДополнительныеПараметрыКоманды;
		КонецЕсли;
		
	КонецЦикла;
    
КонецФункции

// УсловияВидимости -  тип ТаблицаЗначений или Алгоритм возвращаюший ТЗ
// поля  Реквизит - строка , Значение, ВидСравнения - ВидСравнения
// Вид стравнения может быть  только Равно, НеРавно соединение строк  по ИЛИ
Процедура ПроверитьУсловияВидимости(Команда,Алгоритм,ИмяПараметра)
	
	СтркПарметр = _37583_АлгоритмыСервер.ПолучитьПараметр(Алгоритм,ИмяПараметра);
    Если Не СтркПарметр.Отказ Тогда
        УсловияВидимости = СтркПарметр[ИмяПараметра];
        Если  ТипЗнч(УсловияВидимости) = Тип("СправочникСсылка._37583_ALG") Тогда
           УсловияВидимости =  _37583_АлгоритмыСервер.ВыполнитьФункцию(УсловияВидимости)["Результат"];
        КонецЕсли;
        Для Каждого СтрТаб Из УсловияВидимости Цикл
           ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, СтрТаб.Реквизит, СтрТаб.Значение,СтрТаб.ВидСравнения);
        КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СтандартныеПодсистемыВыполнитьКоманду(ПараметрКоманды,ПараметрВыполненияКоманды) Экспорт
    
    _37583_АлгоритмыСервер.ВыполнитьПроцедуру(ПараметрВыполненияКоманды.ОписаниеКоманды.ДополнительныеПараметры.Алгоритм, ПараметрВыполненияКоманды);
    
КонецПроцедуры

#КонецОбласти




